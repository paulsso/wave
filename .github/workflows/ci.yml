name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          libomp-dev \
          libblas-dev \
          liblapack-dev \
          lcov

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage" -DCMAKE_C_FLAGS="--coverage" -G Ninja

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Debug

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C Debug --output-on-failure

    - name: Generate C/C++ coverage report
      working-directory: ${{github.workspace}}/build
      run: |
        lcov --capture --directory . --output-file coverage.info --ignore-errors mismatch
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./build/coverage.info

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang-format \
          clang-tidy \
          python3-pip
        pip3 install cmakelang

    - name: Install .NET SDK
      run: |
        wget https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
        sudo dpkg -i packages-microsoft-prod.deb
        sudo apt-get update
        sudo apt-get install -y dotnet-sdk-9.0

    - name: Check C/C++ formatting
      run: |
        find src -type f \( -name "*.cpp" -o -name "*.h" -o -name "*.c" \) -exec clang-format --style=file --dry-run --Werror {} \;

    - name: Check CMake formatting
      run: |
        find . -type f -name "CMakeLists.txt" -exec cmakelang --check {} \;

    - name: Check C# formatting
      run: |
        cd src/gui
        dotnet format --check

    - name: Run C# static analysis
      run: |
        cd src/gui
        dotnet build /p:TreatWarningsAsErrors=true
        dotnet analyze --no-build 